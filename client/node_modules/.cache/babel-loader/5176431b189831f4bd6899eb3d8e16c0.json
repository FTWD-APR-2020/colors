{"ast":null,"code":"var _jsxFileName = \"/Users/niko/Documents/Code/IHMAR2020/colors/client/src/AddImage.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass AddImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      description: '',\n      imageUrl: ''\n    };\n\n    this.onHandleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.sendToServer = async e => {\n      e.preventDefault();\n      let img = await Axios.post(`http://localhost:5000/add-image`, this.state);\n      console.log(img);\n      this.props.history.push('/');\n    };\n\n    this.handleFileUpload = e => {\n      console.log(\"The file to be uploaded is: \", e.target.files[0]);\n      const uploadData = new FormData(); // imageUrl => this name has to be the same as in the model since we pass\n      // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n      uploadData.append(\"imageUrl\", e.target.files[0]); //service.handleUpload(uploadData) to go to cloudinary and come back with image url\n\n      Axios.post(`http://localhost:5000/upload`, uploadData).then(response => {\n        console.log('response is: ', response); // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n\n        this.setState({\n          imageUrl: response.data.secure_url\n        });\n      }).catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Add Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.sendToServer,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.onHandleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      onChange: this.onHandleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default AddImage;","map":{"version":3,"sources":["/Users/niko/Documents/Code/IHMAR2020/colors/client/src/AddImage.js"],"names":["React","Component","Axios","AddImage","state","name","description","imageUrl","onHandleChange","e","setState","target","value","sendToServer","preventDefault","img","post","console","log","props","history","push","handleFileUpload","files","uploadData","FormData","append","then","response","data","secure_url","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BG,KAF6B,GAErB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,QAAQ,EAAE;AAHN,KAFqB;;AAAA,SAQ7BC,cAR6B,GAQXC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACb,SAACD,CAAC,CAACE,MAAF,CAASN,IAAV,GAAiBI,CAAC,CAACE,MAAF,CAASC;AADb,OAAd;AAGF,KAZ4B;;AAAA,SAc7BC,YAd6B,GAcd,MAAOJ,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACK,cAAF;AACA,UAAIC,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAY,iCAAZ,EAA8C,KAAKZ,KAAnD,CAAhB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,WAAKI,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KAnB4B;;AAAA,SAsB7BC,gBAtB6B,GAsBVb,CAAC,IAAI;AACpBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CT,CAAC,CAACE,MAAF,CAASY,KAAT,CAAe,CAAf,CAA5C;AAEA,YAAMC,UAAU,GAAG,IAAIC,QAAJ,EAAnB,CAHoB,CAIpB;AACA;;AACAD,MAAAA,UAAU,CAACE,MAAX,CAAkB,UAAlB,EAA8BjB,CAAC,CAACE,MAAF,CAASY,KAAT,CAAe,CAAf,CAA9B,EANoB,CASpB;;AACArB,MAAAA,KAAK,CAACc,IAAN,CAAY,8BAAZ,EAA2CQ,UAA3C,EACCG,IADD,CACMC,QAAQ,IAAI;AACdX,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BU,QAA7B,EADc,CAEd;;AACA,aAAKlB,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAAEqB,QAAQ,CAACC,IAAT,CAAcC;AAA1B,SAAd;AACD,OALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZf,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDc,GAAhD;AACD,OARH;AASH,KAzC4B;AAAA;;AA6C7BC,EAAAA,MAAM,GAAE;AACJ,wBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAM,MAAA,QAAQ,EAAE,KAAKpB,YAArB;AAAmC,MAAA,OAAO,EAAC,qBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAE,KAAKL,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,aAAxB;AAAuC,MAAA,QAAQ,EAAE,KAAKA,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,QAAQ,EAAE,KAAKc,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFA,CADJ;AAYH;;AA1D4B;;AA8DjC,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios'\n\nclass AddImage extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        imageUrl: ''\n    }\n\n    onHandleChange = (e) => {\n       this.setState({\n        [e.target.name]: e.target.value\n       })\n    }\n\n    sendToServer = async (e) => {\n        e.preventDefault()\n        let img = await Axios.post(`http://localhost:5000/add-image`, this.state)\n        console.log(img)\n        this.props.history.push('/')\n    }\n\n    // this method handles just the file upload\n    handleFileUpload = e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n \n        const uploadData = new FormData();\n        // imageUrl => this name has to be the same as in the model since we pass\n        // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n        \n        \n        //service.handleUpload(uploadData) to go to cloudinary and come back with image url\n        Axios.post(`http://localhost:5000/upload`, uploadData)\n        .then(response => {\n            console.log('response is: ', response);\n            // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n            this.setState({ imageUrl: response.data.secure_url });\n          })\n          .catch(err => {\n            console.log(\"Error while uploading the file: \", err);\n          });\n    }\n\n\n\n    render(){\n        return(\n            <>\n            <h1>Add Form</h1>\n            <form onSubmit={this.sendToServer} encType=\"multipart/form-data\" >\n                <input type=\"text\" name=\"name\" onChange={this.onHandleChange} />\n                <input type=\"text\" name=\"description\"  onChange={this.onHandleChange} />\n                <input type=\"file\"  onChange={this.handleFileUpload} />\n\n                <input type=\"submit\" />\n            </form>\n            </>\n        )\n    }\n\n}\n\nexport default AddImage"]},"metadata":{},"sourceType":"module"}